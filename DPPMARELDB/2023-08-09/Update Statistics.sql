
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_7755B73D' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [_WA_Sys_00000003_7755B73D] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_7755B73D] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_7755B73D] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ActualWeight' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [ActualWeight] WITH FULLSCAN ;
		END
		PRINT '[ActualWeight] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ActualWeight] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ApplicationName' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [ApplicationName] WITH FULLSCAN ;
		END
		PRINT '[ApplicationName] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ApplicationName] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'BatchID' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [BatchID] WITH FULLSCAN ;
		END
		PRINT '[BatchID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[BatchID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'BoxSerialNumber' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [BoxSerialNumber] WITH FULLSCAN ;
		END
		PRINT '[BoxSerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[BoxSerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LastModDate' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [LastModDate] WITH FULLSCAN ;
		END
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LoadID' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [LoadID] WITH FULLSCAN ;
		END
		PRINT '[LoadID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LoadID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'MachineName' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [MachineName] WITH FULLSCAN ;
		END
		PRINT '[MachineName] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[MachineName] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'MovementType' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [MovementType] WITH FULLSCAN ;
		END
		PRINT '[MovementType] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[MovementType] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'OperationMode' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [OperationMode] WITH FULLSCAN ;
		END
		PRINT '[OperationMode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[OperationMode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'OperationType' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [OperationType] WITH FULLSCAN ;
		END
		PRINT '[OperationType] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[OperationType] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'OrderID' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [OrderID] WITH FULLSCAN ;
		END
		PRINT '[OrderID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[OrderID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PalletSerialNumber' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [PalletSerialNumber] WITH FULLSCAN ;
		END
		PRINT '[PalletSerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PalletSerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Quantity' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [Quantity] WITH FULLSCAN ;
		END
		PRINT '[Quantity] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Quantity] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordCreation' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordCreation] WITH FULLSCAN ;
		END
		PRINT '[RecordCreation] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordCreation] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordFirstSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordFirstSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordSource' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordSource] WITH FULLSCAN ;
		END
		PRINT '[RecordSource] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordSource] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordSyncError' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordSyncError] WITH FULLSCAN ;
		END
		PRINT '[RecordSyncError] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordSyncError] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordSyncStatus' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RecordSyncStatus] WITH FULLSCAN ;
		END
		PRINT '[RecordSyncStatus] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordSyncStatus] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RowID' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [RowID] WITH FULLSCAN ;
		END
		PRINT '[RowID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RowID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'SerialNumber' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [SerialNumber] WITH FULLSCAN ;
		END
		PRINT '[SerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[SerialNumber] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'SKUCode' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [SKUCode] WITH FULLSCAN ;
		END
		PRINT '[SKUCode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[SKUCode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'StockTakeID' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [StockTakeID] WITH FULLSCAN ;
		END
		PRINT '[StockTakeID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[StockTakeID] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'WarehouseCode' AND OBJECT_NAME(S.OBJECT_ID) = 'MTECH_MOVEMENT_LOG' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] [WarehouseCode] WITH FULLSCAN ;
		END
		PRINT '[WarehouseCode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[WarehouseCode] on [IDB_MTECH_MAREL_SL].[dbo].[MTECH_MOVEMENT_LOG] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000001_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000002_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000003_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000004_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000005_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_0000000A_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_0000000B_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000D_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_0000000D_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000D_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000D_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000F_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_0000000F_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000F_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000F_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000010_44952D46' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] [_WA_Sys_00000010_44952D46] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000010_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000010_44952D46] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000001_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000002_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000003_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000004_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000005_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000006_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000007_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000008_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000009_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000A_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000B_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000C_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000C_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000C_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000C_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000D_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000D_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000D_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000D_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000E_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000E_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000E_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000E_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000F_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000000F_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000F_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000F_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000010_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000010_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000010_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000010_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000011_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000011_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000011_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000011_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000012_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000012_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000012_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000012_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000013_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000013_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000013_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000013_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000014_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000014_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000014_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000014_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000015_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000015_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000015_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000015_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000016_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000016_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000016_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000016_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000017_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000017_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000017_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000017_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000018_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000018_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000018_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000018_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000019_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000019_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000019_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000019_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001A_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001A_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001A_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001A_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001B_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001B_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001B_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001B_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001C_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001C_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001C_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001C_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001D_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001D_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001D_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001D_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001E_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001E_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001E_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001E_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001F_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_0000001F_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001F_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001F_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000020_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000020_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000020_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000020_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000021_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000021_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000021_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000021_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000022_4589517F' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_PRODUCTION_ARCHIVE' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] [_WA_Sys_00000022_4589517F] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000022_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000022_4589517F] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_PRODUCTION_ARCHIVE] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_43A1090D' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_bak_27022022' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_bak_27022022] [_WA_Sys_00000003_43A1090D] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_43A1090D] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_bak_27022022] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_43A1090D] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_bak_27022022] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_6ABAD62E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_SH_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] [_WA_Sys_00000001_6ABAD62E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_6ABAD62E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_SH_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] [_WA_Sys_00000004_6ABAD62E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000F_6ABAD62E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_SH_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] [_WA_Sys_0000000F_6ABAD62E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000F_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000F_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000010_6ABAD62E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_MOVEMENT_SH_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] [_WA_Sys_00000010_6ABAD62E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000010_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000010_6ABAD62E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_MOVEMENT_SH_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_0A688BB1' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [_WA_Sys_00000002_0A688BB1] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_0A688BB1] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_0A688BB1] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_0A688BB1' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [_WA_Sys_00000004_0A688BB1] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_0A688BB1] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_0A688BB1] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ACRONYM' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [ACRONYM] WITH FULLSCAN ;
		END
		PRINT '[ACRONYM] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ACRONYM] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Article' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Article] WITH FULLSCAN ;
		END
		PRINT '[Article] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Article] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Flock' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Flock] WITH FULLSCAN ;
		END
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Grower' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Grower] WITH FULLSCAN ;
		END
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Id' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Id] WITH FULLSCAN ;
		END
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Itgrstatus' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Itgrstatus] WITH FULLSCAN ;
		END
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_ID' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Line_ID] WITH FULLSCAN ;
		END
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_Name' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Line_Name] WITH FULLSCAN ;
		END
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PDA_ID' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [PDA_ID] WITH FULLSCAN ;
		END
		PRINT '[PDA_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PDA_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PDA_Name' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [PDA_Name] WITH FULLSCAN ;
		END
		PRINT '[PDA_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PDA_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Quality' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Quality] WITH FULLSCAN ;
		END
		PRINT '[Quality] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Quality] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Sequence' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Sequence] WITH FULLSCAN ;
		END
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Weight_Class' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Weight_Class] WITH FULLSCAN ;
		END
		PRINT '[Weight_Class] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Weight_Class] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Weight_Class_Number' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] [Weight_Class_Number] WITH FULLSCAN ;
		END
		PRINT '[Weight_Class_Number] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Weight_Class_Number] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_TREC_TRCS_Quality_Per_Weight_Range_Performence_Export_History_ForChecking_toremove] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'DT_Start' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [DT_Start] WITH FULLSCAN ;
		END
		PRINT '[DT_Start] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[DT_Start] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Exporttime' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Exporttime] WITH FULLSCAN ;
		END
		PRINT '[Exporttime] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Exporttime] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Flock' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Flock] WITH FULLSCAN ;
		END
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Grower' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Grower] WITH FULLSCAN ;
		END
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Id' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Id] WITH FULLSCAN ;
		END
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'In_Line' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [In_Line] WITH FULLSCAN ;
		END
		PRINT '[In_Line] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[In_Line] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Itgrstatus' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Itgrstatus] WITH FULLSCAN ;
		END
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_ID' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Line_ID] WITH FULLSCAN ;
		END
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_Name' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Line_Name] WITH FULLSCAN ;
		END
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Lotcode' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Lotcode] WITH FULLSCAN ;
		END
		PRINT '[Lotcode] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Lotcode] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'party' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [party] WITH FULLSCAN ;
		END
		PRINT '[party] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[party] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Sequence' AND OBJECT_NAME(S.OBJECT_ID) = 'cust_itgr_FlockStatus_Export_audit' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] [Sequence] WITH FULLSCAN ;
		END
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[cust_itgr_FlockStatus_Export_audit] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_118A8A8C' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [_WA_Sys_00000003_118A8A8C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_118A8A8C] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_118A8A8C] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_118A8A8C' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [_WA_Sys_00000004_118A8A8C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_118A8A8C] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_118A8A8C] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_118A8A8C' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [_WA_Sys_00000006_118A8A8C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_118A8A8C] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_118A8A8C] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_118A8A8C' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [_WA_Sys_00000007_118A8A8C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_118A8A8C] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_118A8A8C] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_118A8A8C' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [_WA_Sys_0000000A_118A8A8C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_118A8A8C] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_118A8A8C] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspitems_inspection_item' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [ix_qc_inspitems_inspection_item] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspitems_inspection_item] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspitems_inspection_item] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_qc_inspitems' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspitems' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspitems] [pk_qc_inspitems] WITH FULLSCAN ;
		END
		PRINT '[pk_qc_inspitems] on [innova].[dbo].[qc_inspitems] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_qc_inspitems] on [innova].[dbo].[qc_inspitems] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000001_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000002_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000003_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000004_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000005_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000006_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000007_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000008_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_00000009_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_0000000A_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_0000000B_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000C_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_0000000C_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000C_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000C_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000D_2F10007B' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [_WA_Sys_0000000D_2F10007B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000D_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000D_2F10007B] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_27891' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [FARD_IX_27891] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_27891] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_27891] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IDX_ORDER_ITEM_SYNC_BATCHID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [IDX_ORDER_ITEM_SYNC_BATCHID] WITH FULLSCAN ;
		END
		PRINT '[IDX_ORDER_ITEM_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IDX_ORDER_ITEM_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IX_AIDBA_17_20220326' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [IX_AIDBA_17_20220326] WITH FULLSCAN ;
		END
		PRINT '[IX_AIDBA_17_20220326] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IX_AIDBA_17_20220326] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LastModDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [LastModDate] WITH FULLSCAN ;
		END
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LoadReleaseID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [LoadReleaseID] WITH FULLSCAN ;
		END
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordFirstSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [RecordFirstSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'UNQ_ITF_ORDER_ITEM_ROWID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER_ITEM' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] [UNQ_ITF_ORDER_ITEM_ROWID] WITH FULLSCAN ;
		END
		PRINT '[UNQ_ITF_ORDER_ITEM_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[UNQ_ITF_ORDER_ITEM_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER_ITEM] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000002_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000003_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000004_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000005_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000006_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000009_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000E_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_0000000E_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000E_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000E_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000010_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000010_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000010_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000010_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000011_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000011_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000011_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000011_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000012_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000012_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000012_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000012_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000013_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000013_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000013_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000013_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000014_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000014_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000014_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000014_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000018_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000018_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000018_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000018_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000019_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000019_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000019_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000019_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001F_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_0000001F_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001F_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001F_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000020_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000020_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000020_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000020_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000021_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000021_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000021_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000021_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000023_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000023_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000023_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000023_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000024_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000024_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000024_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000024_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000028_0BD1B136' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [_WA_Sys_00000028_0BD1B136] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000028_0BD1B136] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000028_0BD1B136] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_10916' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [FARD_IX_10916] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_10916] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_10916] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_1382' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [FARD_IX_1382] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_1382] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_1382] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_26769' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [FARD_IX_26769] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_26769] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_26769] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_26771' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [FARD_IX_26771] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_26771] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_26771] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspections_prday_procedure_rtype' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [ix_qc_inspections_prday_procedure_rtype] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspections_prday_procedure_rtype] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspections_prday_procedure_rtype] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspections_prday_process_rtype' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [ix_qc_inspections_prday_process_rtype] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspections_prday_process_rtype] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspections_prday_process_rtype] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspections_prperiod_rtype' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [ix_qc_inspections_prperiod_rtype] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspections_prperiod_rtype] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspections_prperiod_rtype] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspections_sprperiod_rtype' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [ix_qc_inspections_sprperiod_rtype] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspections_sprperiod_rtype] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspections_sprperiod_rtype] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_inspections_unittype_itemid' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [ix_qc_inspections_unittype_itemid] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_inspections_unittype_itemid] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_inspections_unittype_itemid] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_qc_inspections' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_inspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_inspections] [pk_qc_inspections] WITH FULLSCAN ;
		END
		PRINT '[pk_qc_inspections] on [innova].[dbo].[qc_inspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_qc_inspections] on [innova].[dbo].[qc_inspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_scheduledeventinspections_event' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_scheduledeventinspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_scheduledeventinspections] [ix_qc_scheduledeventinspections_event] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_scheduledeventinspections_event] on [innova].[dbo].[qc_scheduledeventinspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_scheduledeventinspections_event] on [innova].[dbo].[qc_scheduledeventinspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_qc_scheduledeventinspections_inspection' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_scheduledeventinspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_scheduledeventinspections] [ix_qc_scheduledeventinspections_inspection] WITH FULLSCAN ;
		END
		PRINT '[ix_qc_scheduledeventinspections_inspection] on [innova].[dbo].[qc_scheduledeventinspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_qc_scheduledeventinspections_inspection] on [innova].[dbo].[qc_scheduledeventinspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_qc_scheduledeventinspections' AND OBJECT_NAME(S.OBJECT_ID) = 'qc_scheduledeventinspections' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[qc_scheduledeventinspections] [pk_qc_scheduledeventinspections] WITH FULLSCAN ;
		END
		PRINT '[pk_qc_scheduledeventinspections] on [innova].[dbo].[qc_scheduledeventinspections] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_qc_scheduledeventinspections] on [innova].[dbo].[qc_scheduledeventinspections] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_5A846E65' AND OBJECT_NAME(S.OBJECT_ID) = 'BKP_ITF_PRODUCTION_20220923' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] [_WA_Sys_00000001_5A846E65] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_5A846E65] on [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_5A846E65] on [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_5A846E65' AND OBJECT_NAME(S.OBJECT_ID) = 'BKP_ITF_PRODUCTION_20220923' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] [_WA_Sys_00000009_5A846E65] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_5A846E65] on [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_5A846E65] on [IDB_MTECH_MAREL_SL].[dbo].[BKP_ITF_PRODUCTION_20220923] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_41B8C09B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_dbmhistory' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_dbmhistory] [_WA_Sys_00000004_41B8C09B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_41B8C09B] on [innova].[dbo].[base_dbmhistory] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_41B8C09B] on [innova].[dbo].[base_dbmhistory] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_41B8C09B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_dbmhistory' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_dbmhistory] [_WA_Sys_00000008_41B8C09B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_41B8C09B] on [innova].[dbo].[base_dbmhistory] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_41B8C09B] on [innova].[dbo].[base_dbmhistory] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_base_dbmhistory_regtime' AND OBJECT_NAME(S.OBJECT_ID) = 'base_dbmhistory' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_dbmhistory] [ix_base_dbmhistory_regtime] WITH FULLSCAN ;
		END
		PRINT '[ix_base_dbmhistory_regtime] on [innova].[dbo].[base_dbmhistory] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_base_dbmhistory_regtime] on [innova].[dbo].[base_dbmhistory] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_base_dbmhistory' AND OBJECT_NAME(S.OBJECT_ID) = 'base_dbmhistory' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_dbmhistory] [pk_base_dbmhistory] WITH FULLSCAN ;
		END
		PRINT '[pk_base_dbmhistory] on [innova].[dbo].[base_dbmhistory] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_base_dbmhistory] on [innova].[dbo].[base_dbmhistory] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_base_alarmconfigurationmembers' AND OBJECT_NAME(S.OBJECT_ID) = 'base_alarmconfigurationmembers' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_alarmconfigurationmembers] [pk_base_alarmconfigurationmembers] WITH FULLSCAN ;
		END
		PRINT '[pk_base_alarmconfigurationmembers] on [innova].[dbo].[base_alarmconfigurationmembers] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_base_alarmconfigurationmembers] on [innova].[dbo].[base_alarmconfigurationmembers] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_base_sysprogramlog_regtime' AND OBJECT_NAME(S.OBJECT_ID) = 'base_sysprogramlog' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_sysprogramlog] [ix_base_sysprogramlog_regtime] WITH FULLSCAN ;
		END
		PRINT '[ix_base_sysprogramlog_regtime] on [innova].[dbo].[base_sysprogramlog] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_base_sysprogramlog_regtime] on [innova].[dbo].[base_sysprogramlog] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_base_sysprogramlog_sysprogram_regtime' AND OBJECT_NAME(S.OBJECT_ID) = 'base_sysprogramlog' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_sysprogramlog] [ix_base_sysprogramlog_sysprogram_regtime] WITH FULLSCAN ;
		END
		PRINT '[ix_base_sysprogramlog_sysprogram_regtime] on [innova].[dbo].[base_sysprogramlog] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_base_sysprogramlog_sysprogram_regtime] on [innova].[dbo].[base_sysprogramlog] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_base_sysprogramlog' AND OBJECT_NAME(S.OBJECT_ID) = 'base_sysprogramlog' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_sysprogramlog] [pk_base_sysprogramlog] WITH FULLSCAN ;
		END
		PRINT '[pk_base_sysprogramlog] on [innova].[dbo].[base_sysprogramlog] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_base_sysprogramlog] on [innova].[dbo].[base_sysprogramlog] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_5CA1C101' AND OBJECT_NAME(S.OBJECT_ID) = 'base_persistentdata' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_persistentdata] [_WA_Sys_00000002_5CA1C101] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_5CA1C101] on [innova].[dbo].[base_persistentdata] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_5CA1C101] on [innova].[dbo].[base_persistentdata] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_5CA1C101' AND OBJECT_NAME(S.OBJECT_ID) = 'base_persistentdata' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_persistentdata] [_WA_Sys_00000003_5CA1C101] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_5CA1C101] on [innova].[dbo].[base_persistentdata] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_5CA1C101] on [innova].[dbo].[base_persistentdata] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_base_persistentdata' AND OBJECT_NAME(S.OBJECT_ID) = 'base_persistentdata' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_persistentdata] [pk_base_persistentdata] WITH FULLSCAN ;
		END
		PRINT '[pk_base_persistentdata] on [innova].[dbo].[base_persistentdata] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_base_persistentdata] on [innova].[dbo].[base_persistentdata] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000001_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000002_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000003_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000004_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000005_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000006_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000007_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000008_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_00000009_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_33D4B598' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [_WA_Sys_0000000A_33D4B598] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_33D4B598] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IDX_CYCLE_COUNT_SYNC_BATCHID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [IDX_CYCLE_COUNT_SYNC_BATCHID] WITH FULLSCAN ;
		END
		PRINT '[IDX_CYCLE_COUNT_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IDX_CYCLE_COUNT_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LastModDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [LastModDate] WITH FULLSCAN ;
		END
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordFirstSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [RecordFirstSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'UNQ_ITF_CYCLE_COUNT_ROWID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_CYCLE_COUNT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] [UNQ_ITF_CYCLE_COUNT_ROWID] WITH FULLSCAN ;
		END
		PRINT '[UNQ_ITF_CYCLE_COUNT_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[UNQ_ITF_CYCLE_COUNT_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_CYCLE_COUNT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000003_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000004_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000000B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000012_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000012_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000012_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000012_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000017_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000017_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000017_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000017_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000001B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001C_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000001C_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001C_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001C_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001D_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000001D_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001D_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001D_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001E_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000001E_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001E_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001E_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001F_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000001F_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001F_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001F_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000020_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000020_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000020_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000020_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000021_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000021_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000021_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000021_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000022_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000022_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000022_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000022_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000023_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000023_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000023_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000023_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000024_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000024_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000024_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000024_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000025_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000025_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000025_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000025_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000029_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000029_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000029_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000029_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000002C_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000002C_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000002C_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000002C_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000030_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000030_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000030_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000030_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000034_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000034_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000034_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000034_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000038_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000038_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000038_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000038_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000003B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000003B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000003B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000003B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000003D_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000003D_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000003D_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000003D_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000003E_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000003E_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000003E_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000003E_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000042_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000042_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000042_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000042_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000044_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000044_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000044_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000044_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000046_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000046_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000046_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000046_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000047_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000047_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000047_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000047_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000048_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000048_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000048_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000048_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000049_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000049_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000049_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000049_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000004A_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000004A_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000004A_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000004A_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000004B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000004B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000004B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000004B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000004C_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000004C_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000004C_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000004C_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000004F_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000004F_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000004F_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000004F_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000050_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000050_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000050_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000050_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000051_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000051_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000051_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000051_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000052_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000052_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000052_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000052_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000053_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000053_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000053_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000053_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000054_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000054_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000054_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000054_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000055_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000055_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000055_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000055_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000056_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000056_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000056_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000056_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000058_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000058_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000058_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000058_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000005A_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000005A_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000005A_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000005A_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000005B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000005B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000005B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000005B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000063_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000063_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000063_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000063_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000006A_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000006A_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000006A_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000006A_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000006B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000006B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000006B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000006B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000006C_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000006C_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000006C_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000006C_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000070_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000070_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000070_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000070_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000085_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000085_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000085_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000085_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000086_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000086_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000086_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000086_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000088_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_00000088_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000088_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000088_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000008A_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000008A_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000008A_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000008A_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000008B_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000008B_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000008B_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000008B_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000008C_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000008C_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000008C_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000008C_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000008D_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000008D_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000008D_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000008D_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000008E_7167D3BD' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [_WA_Sys_0000008E_7167D3BD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000008E_7167D3BD] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000008E_7167D3BD] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IX_Hitachi_75_74' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [IX_Hitachi_75_74] WITH FULLSCAN ;
		END
		PRINT '[IX_Hitachi_75_74] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IX_Hitachi_75_74] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IX_Hitachi_78_77' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [IX_Hitachi_78_77] WITH FULLSCAN ;
		END
		PRINT '[IX_Hitachi_78_77] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IX_Hitachi_78_77] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_proc_materials_code' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [ix_proc_materials_code] WITH FULLSCAN ;
		END
		PRINT '[ix_proc_materials_code] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_proc_materials_code] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_proc_materials_objecttemplate' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [ix_proc_materials_objecttemplate] WITH FULLSCAN ;
		END
		PRINT '[ix_proc_materials_objecttemplate] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_proc_materials_objecttemplate] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_proc_materials' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_materials' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_materials] [pk_proc_materials] WITH FULLSCAN ;
		END
		PRINT '[pk_proc_materials] on [innova].[dbo].[proc_materials] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_proc_materials] on [innova].[dbo].[proc_materials] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000002_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000003_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000004_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000005_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000006_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000007_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000008_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_46E78A0C' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [_WA_Sys_00000009_46E78A0C] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_46E78A0C] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_46E78A0C] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PK_DIOPENS' AND OBJECT_NAME(S.OBJECT_ID) = 'DIOPENS' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[DIOPENS] [PK_DIOPENS] WITH FULLSCAN ;
		END
		PRINT '[PK_DIOPENS] on [PDSNT].[dbo].[DIOPENS] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PK_DIOPENS] on [PDSNT].[dbo].[DIOPENS] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000001_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000002_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000003_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000004_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000005_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000006_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000007_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_00000009_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_0000000A_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_0000000B_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000C_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_0000000C_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000C_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000C_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000D_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_0000000D_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000D_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000D_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000E_2A4B4B5E' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [_WA_Sys_0000000E_2A4B4B5E] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000E_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000E_2A4B4B5E] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'FARD_IX_34242' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [FARD_IX_34242] WITH FULLSCAN ;
		END
		PRINT '[FARD_IX_34242] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[FARD_IX_34242] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IDX_ORDER_SYNC_BATCHID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [IDX_ORDER_SYNC_BATCHID] WITH FULLSCAN ;
		END
		PRINT '[IDX_ORDER_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IDX_ORDER_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LastModDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [LastModDate] WITH FULLSCAN ;
		END
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LoadReleaseID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [LoadReleaseID] WITH FULLSCAN ;
		END
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordFirstSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [RecordFirstSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ReferenceID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [ReferenceID] WITH FULLSCAN ;
		END
		PRINT '[ReferenceID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ReferenceID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'UNQ_ITF_ORDER_ROWID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_ORDER' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] [UNQ_ITF_ORDER_ROWID] WITH FULLSCAN ;
		END
		PRINT '[UNQ_ITF_ORDER_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[UNQ_ITF_ORDER_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_ORDER] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000001_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000001_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000001_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000001_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000002_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000003_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000004_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000005_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000006_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000006_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000006_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000006_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000007_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000008_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_00000009_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000A_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_0000000A_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000A_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000A_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000B_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_0000000B_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000B_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000B_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000C_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_0000000C_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000C_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000C_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000D_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_0000000D_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000D_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000D_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000E_25869641' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [_WA_Sys_0000000E_25869641] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000E_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000E_25869641] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'IDX_SHIPMENT_SYNC_BATCHID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [IDX_SHIPMENT_SYNC_BATCHID] WITH FULLSCAN ;
		END
		PRINT '[IDX_SHIPMENT_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[IDX_SHIPMENT_SYNC_BATCHID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LastModDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [LastModDate] WITH FULLSCAN ;
		END
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LastModDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'LoadReleaseID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [LoadReleaseID] WITH FULLSCAN ;
		END
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[LoadReleaseID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'RecordFirstSyncDate' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [RecordFirstSyncDate] WITH FULLSCAN ;
		END
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[RecordFirstSyncDate] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'UNQ_ITF_SHIPMENT_ROWID' AND OBJECT_NAME(S.OBJECT_ID) = 'ITF_SHIPMENT' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] [UNQ_ITF_SHIPMENT_ROWID] WITH FULLSCAN ;
		END
		PRINT '[UNQ_ITF_SHIPMENT_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[UNQ_ITF_SHIPMENT_ROWID] on [IDB_MTECH_MAREL_SL].[dbo].[ITF_SHIPMENT] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000002_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000003_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000004_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000005_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000005_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000005_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000005_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000007_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000007_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000007_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000007_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000008_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000008_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000008_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000008_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000009_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000009_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000009_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000009_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000000E_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_0000000E_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000000E_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000000E_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000010_3864608B' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [_WA_Sys_00000010_3864608B] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000010_3864608B] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000010_3864608B] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_base_guinodes' AND OBJECT_NAME(S.OBJECT_ID) = 'base_guinodes' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[base_guinodes] [pk_base_guinodes] WITH FULLSCAN ;
		END
		PRINT '[pk_base_guinodes] on [innova].[dbo].[base_guinodes] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_base_guinodes] on [innova].[dbo].[base_guinodes] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000003_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_00000003_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000003_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000003_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000004_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_00000004_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000004_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000004_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001B_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_0000001B_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001B_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001B_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001C_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_0000001C_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001C_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001C_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001D_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_0000001D_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001D_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001D_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001E_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_0000001E_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001E_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001E_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_0000001F_762C88DA' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [_WA_Sys_0000001F_762C88DA] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_0000001F_762C88DA] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_0000001F_762C88DA] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_proc_contentspecs_code' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [ix_proc_contentspecs_code] WITH FULLSCAN ;
		END
		PRINT '[ix_proc_contentspecs_code] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_proc_contentspecs_code] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ix_proc_contentspecs_objecttemplate' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [ix_proc_contentspecs_objecttemplate] WITH FULLSCAN ;
		END
		PRINT '[ix_proc_contentspecs_objecttemplate] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ix_proc_contentspecs_objecttemplate] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'innova')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [innova].sys.stats S CROSS APPLY [innova].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'pk_proc_contentspecs' AND OBJECT_NAME(S.OBJECT_ID) = 'proc_contentspecs' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [innova].[dbo].[proc_contentspecs] [pk_proc_contentspecs] WITH FULLSCAN ;
		END
		PRINT '[pk_proc_contentspecs] on [innova].[dbo].[proc_contentspecs] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[pk_proc_contentspecs] on [innova].[dbo].[proc_contentspecs] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'ACRONYM' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [ACRONYM] WITH FULLSCAN ;
		END
		PRINT '[ACRONYM] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[ACRONYM] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Article' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Article] WITH FULLSCAN ;
		END
		PRINT '[Article] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Article] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Exporttime' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Exporttime] WITH FULLSCAN ;
		END
		PRINT '[Exporttime] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Exporttime] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Flock' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Flock] WITH FULLSCAN ;
		END
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Flock] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Grower' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Grower] WITH FULLSCAN ;
		END
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Grower] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Id' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Id] WITH FULLSCAN ;
		END
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Id] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Itgrstatus' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Itgrstatus] WITH FULLSCAN ;
		END
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Itgrstatus] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_ID' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Line_ID] WITH FULLSCAN ;
		END
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_ID] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Line_Name' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Line_Name] WITH FULLSCAN ;
		END
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Line_Name] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Lotcode' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Lotcode] WITH FULLSCAN ;
		END
		PRINT '[Lotcode] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Lotcode] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PDA_ID' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [PDA_ID] WITH FULLSCAN ;
		END
		PRINT '[PDA_ID] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PDA_ID] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PDA_Name' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [PDA_Name] WITH FULLSCAN ;
		END
		PRINT '[PDA_Name] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PDA_Name] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Quality' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Quality] WITH FULLSCAN ;
		END
		PRINT '[Quality] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Quality] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Sequence' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Sequence] WITH FULLSCAN ;
		END
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Sequence] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Weight_Class' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Weight_Class] WITH FULLSCAN ;
		END
		PRINT '[Weight_Class] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Weight_Class] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'IDB_MTECH_MAREL_SL')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [IDB_MTECH_MAREL_SL].sys.stats S CROSS APPLY [IDB_MTECH_MAREL_SL].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'Weight_Class_Number' AND OBJECT_NAME(S.OBJECT_ID) = 'Quality_Per_Weight_Range_Performence_Export_BKP' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] [Weight_Class_Number] WITH FULLSCAN ;
		END
		PRINT '[Weight_Class_Number] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[Weight_Class_Number] on [IDB_MTECH_MAREL_SL].[dbo].[Quality_Per_Weight_Range_Performence_Export_BKP] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = '_WA_Sys_00000002_1BC821DD' AND OBJECT_NAME(S.OBJECT_ID) = 'MENUSECURITY' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[MENUSECURITY] [_WA_Sys_00000002_1BC821DD] WITH FULLSCAN ;
		END
		PRINT '[_WA_Sys_00000002_1BC821DD] on [PDSNT].[dbo].[MENUSECURITY] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[_WA_Sys_00000002_1BC821DD] on [PDSNT].[dbo].[MENUSECURITY] cannot be updated.';			
	END CATCH;
END
	
IF EXISTS
	(SELECT * FROM sys.databases WHERE state = 0 AND name = 'PDSNT')
BEGIN
	BEGIN TRY
		IF EXISTS (SELECT 1 FROM [PDSNT].sys.stats S CROSS APPLY [PDSNT].sys.dm_db_stats_properties(S.object_id,S.stats_id) P WHERE S.NAME = 'PK_MENUSECURITY' AND OBJECT_NAME(S.OBJECT_ID) = 'MENUSECURITY' AND P.last_updated <= DATEADD(HOUR,-48,SYSDATETIME()))
		BEGIN
			UPDATE STATISTICS [PDSNT].[dbo].[MENUSECURITY] [PK_MENUSECURITY] WITH FULLSCAN ;
		END
		PRINT '[PK_MENUSECURITY] on [PDSNT].[dbo].[MENUSECURITY] is updated.';
	END TRY
	BEGIN CATCH
		PRINT '[PK_MENUSECURITY] on [PDSNT].[dbo].[MENUSECURITY] cannot be updated.';			
	END CATCH;
END
	